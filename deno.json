{
  "name": "@sitebender/documentation",
  "version": "0.1.0",
  "exports": "./lib/index.ts",
  "tasks": {
    "build": "deno run --unstable-temporal --allow-read --allow-write scripts/build/buildDev/index.ts",
    "build:full": "deno run --unstable-temporal --allow-all scripts/build/index.ts",
    "build:lib": "cd lib && deno task build",
    "serve": "deno run --unstable-temporal --allow-net --allow-read jsr:@std/http/file-server --port=3000 dist/",
    "start": "deno task build && deno task serve",
    "clean": "deno run --unstable-temporal --allow-write scripts/clean/index.ts",
    "dev": "deno run --unstable-temporal --allow-all scripts/serve/index.ts",
    "fmt": "deno task sort && deno fmt",
    "fmt:check": "deno fmt --check",
    "fmt:quick": "deno fmt",
    "lint": "deno lint",
    "setup": "deno run --unstable-temporal -A scripts/setup/index.ts",
    "sort": "deno run --unstable-temporal --allow-all scripts/sortImports/index.ts",
    "test": "deno task build && bash scripts/e2e.sh && deno test --unstable-temporal tests/build/ -A --no-check && deno test --unstable-temporal tests/sort/ -A --no-check && deno test --unstable-temporal tests/setup/ -A --no-check && deno test --unstable-temporal tests/dev/ -A --no-check && deno test --unstable-temporal tests/a11y/ -A --no-check && deno test --unstable-temporal tests/clean/ -A --no-check",
    "test:watch": "deno test --unstable-temporal tests/ -A --no-check --watch",
    "test:cov": "deno test --unstable-temporal --coverage=coverage tests/ -A --no-check",
    "test:cov:report": "deno task test:cov && deno coverage coverage --include=\"scripts/\"",
    "test:build": "deno test --unstable-temporal tests/build/ -A --no-check",
    "test:clean": "deno test --unstable-temporal tests/clean/ -A --no-check",
    "test:setup": "deno test --unstable-temporal tests/setup/ -A --no-check",
    "test:sort": "deno test --unstable-temporal tests/sort/ -A --no-check",
    "test:dev": "deno test --unstable-temporal tests/dev/ -A --no-check",
    "type-check": "deno check --unstable-temporal src/**/*.ts src/**/*.tsx scripts/**/*.ts lib/**/*.ts lib/**/*.tsx",
    "e2e": "bash scripts/e2e.sh"
  },
  "imports": {
    "@axe-core/playwright": "npm:@axe-core/playwright@^4.10.2",
    "@playwright/mcp": "npm:@playwright/mcp@^0.0.29",
    "@std/expect": "jsr:@std/expect@^1.0.17",
    "@std/testing": "jsr:@std/testing@^1.0.15",
    "@std/testing/bdd": "jsr:@std/testing@^1.0.15/bdd",
    "playwright-mcp": "npm:@playwright/mcp@^0.0.29",
    "~components/": "./src/components/",
    "~constants/": "./src/constants/",
    "~layouts/": "./src/layouts/",
    "~lib/": "./lib/",
    "~scripts/": "./scripts/",
    "~src/": "./src/",
    "~tests/": "./tests/",
    "~types/": "./src/types/",
    "~utilities/": "./utilities/",
    "createElement": "./utilities/createElement/index.ts",
    "Fragment": "./utilities/Fragment/index.ts",
    "fast-check": "https://esm.sh/fast-check@3.15.1",
    "@modelcontextprotocol/sdk": "npm:@modelcontextprotocol/sdk@^1.0.1",
    "@std/encoding": "jsr:@std/encoding@^1.0.5",
    "playwright": "npm:playwright@^1.49.0"
  },
  "nodeModulesDir": "auto",
  "compilerOptions": {
    "jsx": "react",
    "jsxFactory": "createElement",
    "jsxFragmentFactory": "Fragment",
    "strict": true,
    "checkJs": false,
    "lib": ["dom", "dom.asynciterable", "dom.iterable", "esnext", "deno.ns"],
    "types": ["./lib/types/globals.d.ts"]
  },
  "fmt": {
    "useTabs": true,
    "lineWidth": 80,
    "indentWidth": 2,
    "newLineKind": "lf",
    "semiColons": false,
    "singleQuote": false,
    "proseWrap": "preserve",
    "include": ["src/", "scripts/", "lib/"],
    "exclude": ["dist/", "temp/", "static/"]
  },
  "lint": {
    "include": ["src/", "scripts/", "lib/"],
    "exclude": ["dist/", "temp/", "static/"],
    "rules": {
      "tags": ["recommended"],
      "include": [
        "ban-untagged-todo",
        "camelcase",
        "eqeqeq",
        "no-await-in-loop",
        "no-const-assign",
        "no-sparse-arrays",
        "no-throw-literal",
        "prefer-const"
      ],
      "exclude": []
    }
  },
  "test": {
    "include": ["tests/**/*.ts", "tests/**/*.tsx"],
    "exclude": ["dist/", "temp/"]
  },
  "lock": false
}
